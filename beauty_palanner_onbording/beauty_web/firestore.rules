rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() { return request.auth != null; }
    function isOwner(userId) { return isAuthenticated() && request.auth.uid == userId; }
    function isAdmin() { return isAuthenticated() && request.auth.token.admin == true; }

    // Users root (profile)
    match /Users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated() && request.auth.uid == userId &&
        request.resource.data.keys().hasAny(['Email','CreatedAt','Timezone','TimezoneOffsetMinutes','NotificationPrefs']) &&
        !request.resource.data.keys().hasAny(['admin','moderator']);
      allow update: if (isOwner(userId) && !request.resource.data.diff(resource.data).affectedKeys().hasAny(['admin','moderator'])) || isAdmin();
      allow delete: if isAdmin();

      // Activities CRUD (owner only)
      match /Activities/{activityId} {
        allow read: if isOwner(userId) || isAdmin();
        allow create, update: if isOwner(userId);
        allow delete: if isOwner(userId);
      }

      // Updates: owner can create (generator) and update status. Prevent arbitrary mass writes by owner only.
      match /Updates/{updateId} {
        allow read: if isOwner(userId) || isAdmin();
        allow create: if isOwner(userId);
        allow update: if isOwner(userId);
        allow delete: if isOwner(userId);
      }

      // AI analysis snapshots (read owner). Writes may be by backend or app.
      match /AIAnalysis/{analysisId} {
        allow read: if isOwner(userId) || isAdmin();
        allow create, update: if isOwner(userId) || isAdmin();
        allow delete: if isAdmin();
      }

      // AI analysis uploads tracking
      match /AIAnalysisUploads/{uploadId} {
        allow read: if isOwner(userId) || isAdmin();
        allow create: if isOwner(userId);
        allow update: if isOwner(userId) || isAdmin();
        allow delete: if isOwner(userId) || isAdmin();
      }

      // Notification preferences (single doc under Users root, but also allow sub-doc variant)
      match /NotificationPrefs/{docId} {
        allow read, create, update, delete: if isOwner(userId) || isAdmin();
      }

      // FCM tokens
      match /FcmTokens/{tokenId} {
        allow read: if isOwner(userId) || isAdmin();
        allow create: if isOwner(userId);
        allow delete: if isOwner(userId);
        allow update: if isOwner(userId) || isAdmin();
      }

      // Notifications sent dedupe log (backend only creates; owner can read)
      match /NotificationsSent/{notificationId} {
        allow read: if isOwner(userId) || isAdmin();
        allow create: if isAdmin();
        allow update, delete: if false;
      }
    }

    // Default deny
    match /{document=**} { allow read, write: if false; }
  }
}
