'use client'

import { useState, useRef } from 'react'
import { useQuizStore } from '@/store/quizStore'

interface ImageUploadProps {
  type: 'face' | 'hair'
  currentImageUrl?: string
  onUploadComplete?: (url: string) => void
}

export default function ImageUpload({ type, currentImageUrl, onUploadComplete }: ImageUploadProps) {
  const [isUploading, setIsUploading] = useState(false)
  const [previewUrl, setPreviewUrl] = useState<string | null>(currentImageUrl || null)
  const fileInputRef = useRef<HTMLInputElement>(null)
  const { setAnswer } = useQuizStore()

  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0]
    if (file) {
      handleUpload(file)
    }
  }

  const handleUpload = async (file: File) => {
    if (!file) return

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
    if (!file.type.startsWith('image/')) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ')
      return
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–º–∞–∫—Å–∏–º—É–º 10MB)
    if (file.size > 10 * 1024 * 1024) {
      alert('–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 10MB')
      return
    }

    setIsUploading(true)

    try {
      // –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–≤—å—é –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ base64
      const reader = new FileReader()
      reader.onload = (e) => {
        const base64Url = e.target?.result as string
        setPreviewUrl(base64Url)
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ store –∫–∞–∫ base64
        setAnswer(`${type}ImageUrl`, base64Url)
        
        // –í—ã–∑—ã–≤–∞–µ–º callback
        onUploadComplete?.(base64Url)
        
        console.log('File uploaded successfully (base64)')
      }
      reader.readAsDataURL(file)
    } catch (error) {
      console.error('Upload failed:', error)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
    } finally {
      setIsUploading(false)
    }
  }

  const handleRemoveImage = () => {
    setPreviewUrl(null)
    setAnswer(`${type}ImageUrl`, '')
    if (fileInputRef.current) {
      fileInputRef.current.value = ''
    }
  }

  const getTypeLabel = () => {
    return type === 'face' ? '–ª–∏—Ü–∞' : '–≤–æ–ª–æ—Å'
  }

  return (
    <div className="space-y-4">
      <div className="text-center">
        <h3 className="text-lg font-semibold text-gray-900 mb-2">
          –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ {getTypeLabel()}
        </h3>
        <p className="text-sm text-gray-600">
          –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç AI –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∞—à–µ–π –∫–æ–∂–∏
        </p>
      </div>

      <div className="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-blue-400 transition-colors">
        {previewUrl ? (
          <div className="space-y-4">
            <img
              src={previewUrl}
              alt={`Preview ${type}`}
              className="mx-auto max-h-64 rounded-lg object-cover"
            />
            <div className="flex gap-2 justify-center">
              <button
                onClick={() => fileInputRef.current?.click()}
                disabled={isUploading}
                className="bg-gray-200 hover:bg-gray-300 text-gray-800 text-sm px-4 py-2 rounded-lg disabled:opacity-50"
              >
                {isUploading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ'}
              </button>
              <button
                onClick={handleRemoveImage}
                disabled={isUploading}
                className="bg-gray-200 hover:bg-gray-300 text-gray-800 text-sm px-4 py-2 rounded-lg disabled:opacity-50"
              >
                –£–¥–∞–ª–∏—Ç—å
              </button>
            </div>
          </div>
        ) : (
          <div className="space-y-4">
            <div className="text-4xl text-gray-400">üì∏</div>
            <div>
              <button
                onClick={() => fileInputRef.current?.click()}
                disabled={isUploading}
                className="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg disabled:opacity-50"
              >
                {isUploading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–í—ã–±—Ä–∞—Ç—å —Ñ–æ—Ç–æ'}
              </button>
            </div>
            <p className="text-sm text-gray-500">
              JPG, PNG –¥–æ 10MB
            </p>
          </div>
        )}
      </div>

      <input
        ref={fileInputRef}
        type="file"
        accept="image/*"
        onChange={handleFileSelect}
        className="hidden"
      />
    </div>
  )
}
